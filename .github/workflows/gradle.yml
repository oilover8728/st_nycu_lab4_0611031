# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Compile
      run: ./gradlew compileJava
      
  test:
    needs: compile
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Test
      run: ./gradlew compileTestJava
      
    - name: Upload workflow report file
      uses: actions/upload-artifact@v2
      with:
        name: testReport
        path: build/reports
      
  assemble:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Assemble
      run: ./gradlew assemble
     
     #aaa
    - id: Get_artifact_jar_name
      run: echo "::set-output name=jar_name::buildJar"
      
    - name: Upload workflow assemble jar file
      uses: actions/upload-artifact@v2
      
      with:
        name: ${{ steps.Get_artifact_jar_name.outputs.jar_name }}
        path: build/libs/

  release:
    name: Release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: assemble
    
    runs-on: ubuntu-latest
    
    steps:
      - name: ReleaseName
        id: Get_Release_Name
        run: echo ::set-output name=RELEASE_NAME::${GITHUB_REF/refs\/tags\//}
        
      - name: Download_jar
        uses: actions/download-artifact@v2
        with:
          name: ${{needs.assemble.outputs.artifact_jar_name}}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.ReleaseName.outputs.RELEASE_NAME }}
          files: ${{needs.assemble.outputs.jar_name}}
          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    
    
    
    
    
